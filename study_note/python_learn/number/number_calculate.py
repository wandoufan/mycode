# 主要记录python中数字计算相关的操作


# a+bj形式表示复数，其中实部和虚部都是浮点数
# 备注：虚部后缀可以是j或J
# 注意：两个复数之间不可以比较大小
aComplex = 2.3 - 4.5j
aComplex = 2.3 - 4.5J
print(aComplex.real)  # 该复数的实部
print(aComplex.imag)  # 该复数的虚部
print(aComplex.conjugate(), '\n')  # 返回该复数的共轭复数

# //表示地板除
a = 1 // 2
print(a)
b = 1.0 // 2.0
print(b)

# /表示真正的除法
c = 1 / 2
print(c)
d = 1.0 / 2.0
print(d)
print('\n')

# %表示取余
a = 12
a %= 8
print(a)
b = 12.0
b %= 8.0
print(b)

# **表示幂运算
a = 3**2
b = -3**2  # **优先级比-高
c = (-3)**2
d = 4**-1  # **优先级比-低
print(a, b, c, d)
# 注意：幂运算不仅包括指数大于1的平方、立方等，还包括小于1的平方根，立方根等
print('4的平方根：', 4**0.5)

# 位操作符（只适用于整型）
print(~12)  # ~为取反，结果为-（num+1)
print(12 << 3)  # 左移3位
print(12 >> 3)  # 右移3位
print(12 & 3)  # 按位与运算
print(12 ^ 3)  # 按位异或运算
print(12 | 3)  # 按位或运算

# 赋值运算符:
a += b  # 加法赋值运算符
a = a + b
a -= b  # 减法赋值运算符
a = a - b
a *= b  # 乘法赋值运算符
a = a * b
a /= b  # 除法赋值运算符
a = a / b
a **= b  # 幂赋值运算符
a = a**b
a %= b  # 取余运算符
a = a % b
a //= b # 地板除运算符
a = a // b

# 特别的对于Python中的浮点数，不能直接用==进行比较
# 例如，3 * 0.1 实际等于 0.30000000000000004，而不是0.3
# 因为在计算机中浮点数是用二进制表示，0.0100110011001100110011001100110011001100110011001100110
# 四舍五入就会产生误差
print(3 * 0.1 == 0.3) # >> False
print(0.1 + 0.2) # >> 0.30000000000000004
print(3 * 0.1) # >> 0.30000000000000004

# 因此对于浮点数最好精确到小数点后几位
for i in range(1, 11):
    print('原始结果 : ', i * 0.1)
    num = i * 0.1
    print('精确后结果 ： ','%.1f' %(i*0.1))


# -----------------------------------------------------------------------

# 示例1：幂运算
# 注意：0**0的结果是1，不是0
print([i**i for i in range(3)])