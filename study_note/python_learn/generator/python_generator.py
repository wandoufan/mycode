# 18.关于python生成器(generator)：
# 一边循环，一边计算的机制称为生成器。例如对于很大的列表，列表元素全部创建出来会占用很大的内存空间，如果列表元素可以
# 按照某种算法推算出来，就可以在循环的过程中不断推算出后续的元素，大大节省了存储空间。
# 函数中如果出现了yield关键字，那么该函数就不再是普通函数，而是生成器函数。
# 生成器函数和函数的执行流程不一样。函数是顺序执行，遇到return语句或者最后一行函数语句就返回。而变成generator的函数，
# 在每次调用next()的时候执行，遇到yield语句返回，再次执行时从上次返回的yield语句处继续执行。
# 一个函数或者子程序都只能 return 一次，但是一个生成器能暂停执行并返回一个中间的结果,即用关键字yield来代替return。
# generator对象一般用for i in fun():来迭代输出。

# pthon生成器(generator)：
# 一边循环，一边计算的机制称为生成器。例如对于很大的列表，列表元素全部创建出来会占用很大的内存空间，如果列表元素可以
# 按照某种算法推算出来，就可以在循环的过程中不断推算出后续的元素，大大节省了存储空间。
# 函数中如果出现了yield关键字，那么该函数就不再是普通函数，而是生成器函数。
