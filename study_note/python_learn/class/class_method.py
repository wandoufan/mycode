# 主要记录python中方法相关的知识点

# 方法是可以看做是定义在类中的函数，都是用def进行声明，然后实现一定的功能


# 一、python中函数和方法的区别：
# 1.函数可以写在代码中任意位置，而方法只能写在类class中
# 2.函数可以不写任何参数，而方法至少要有一个self参数
# 3.函数可以直接通过函数名进行调用，而方法必须先对类实例出一个对象，然后通过对象名.方法名的方式来调用


# 二、并不是在类中调用的都叫方法
# 示例：两种方法调用test()
class Test:
    def test(self):
        print('this is a test')

# 1.通过实例对象名.方法名来调用属于方法
t = Test()
t.test()
print(type(t.test))
# 2.通过类名.方法名来调用属于函数
Test.test(123)
print(type(Test.test))


# 三、方法的分类

# 1.共有方法
# 实例可以从外部调用访问的方法

# 2.私有方法 __func()
# 私有方法只在对象内部使用，不能被外部调用

# 3.静态方法
# 静态方法就是类中的函数，不需要实例就能调用
# 静态方法不能访问实例属性，参数不能传入self

# 4.类方法
# 类方法是针对类对象定义的方法，在类方法内部就可以直接访问类属性或调用其他方法
# 类方法使用的默认参数不再是self，而是cls，例如"def 类方法名(cls):"


# 四、方法的命名方式
# 1.object 公用方法
# 2._object 半保护方法
# 3.__object 全私有/全保护方法
# 4.__object__ 内建方法，用户不能使用这样的命名格式


# 五、魔法方法
# python中有一些内置好的特定方法，这些方法会在特定操作时被自动调用，称为魔法方法
# 魔法方法的命名格式是__magic__，用户不需要定义就可以直接使用其功能
# 魔法方法都是针对类对象而言的

# 常见魔法方法：
# 1.__new__
# 首先调用__new__创建并返回一个实例化对象，之后再传递给__init__进行初始化处理
# __new__才是类实例化对象时第一个被调用的方法，但不一般都不会手动重写该方法
# 2.__init__
# __init__是类中初始化的构造方法，不需要有返回值
# 3.__name__
# __name__方法获取类对象的名称信息
# 4.__doc__
# __doc__方法获取类对象的文档信息
# 5.__dict__
# __dict__方法获取字典格式的属性信息


# 六、__new__方法和__init__方法的区别
# __new__是一个静态方法，而__init__是一个实例方法
# __new__方法会返回一个创建的实例，而__init__什么都不返回
# 只有在__new__返回一个cls的实例时，后面的__init__才能被调用
# 当创建一个新实例时调用__new__，初始化一个实例时用__init__